'use strict';

//NORMAL level

/*Task 1 üñ•
–î–∞–Ω –º–∞—Å—Å–∏–≤:
```javascript
    const colors = ['red', 'green', 'blue']
```
–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –¥–ª–∏–Ω—É. */
{
    const colors: string[] = ['red', 'green', 'blue'];
    console.log('Task 1: ',  colors.length);
}




/*Task 2 üñ•
–î–∞–Ω –º–∞—Å—Å–∏–≤:
```javascript
    const animals = ['monkey', 'dog', 'cat']
```
–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–ª–∏–Ω–Ω—ã. */
{
    const animals: string[] = ['monkey', 'dog', 'cat'];
    console.log('Task 2: ', animals.at(-1));
}




/*Task 3 üñ•
/*–î–∞–Ω –º–∞—Å—Å–∏–≤:
```javascript
    const numbers = [5, 43, 63, 23, 90]
```
–£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
> –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏. */
{console.log('Task 3: ')}
{
    const numbers: number[] = [5, 43, 63, 23, 90];
    numbers.length = 0;
    console.log(numbers);
}
{
    const numbers: number[] = [5, 43, 63, 23, 90];
    numbers.splice(0, 5);
    console.log(numbers);
}




/*Task 4 üñ•
–î–∞–Ω –º–∞—Å—Å–∏–≤:
```javascript
    const students = ['Polina', 'Dasha', 'Masha']
```
+ –£–¥–∞–ª–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Borya`.
+ –£–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞, –∑–∞—Ç–µ–º –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞ `Andrey`.
+ –ü–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å. */
{
    const students: string[] = ['Polina', 'Dasha', 'Masha'];
    
    // —É–¥–∞–ª–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤–∏–º `Borya`
    students.splice((-1), 1, "Borya"); 
        
    // —É–¥–∞–ª–∏–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –¥–æ–±–∞–≤–∏–º `Andrey`
    students.splice(0, 1, "Andrey"); 
    console.log('Task 4: ', students)
}




/*Task 5 üñ•
–î–∞–Ω –º–∞—Å—Å–∏–≤:
```javascript
    const cats = ['Gachito', 'Tom', 'Batman']
```
–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞. –°–Ω–∞—á–∞–ª–∞ —á–µ—Ä–µ–∑ —Ü–∏–∫–ª **`for`**, –∑–∞—Ç–µ–º **`for of`**. */
{
    console.log('Task 5: ')

    const cats: string[] = ['Gachito', 'Tom', 'Batman'];
    for (let i = 0; i < cats.length; i++) {
        console.log(cats[i]);
    }
    
    for (const cat of cats) {
        console.log(cat);
}
}




/*Task 6 üñ•
```javascript
    const evenNumbers = [2, 4, 6, 8, 10]
    const oddNumbers = [1, 3, 5, 7, 9]
```
+ –°–æ–µ–¥–∏–Ω–∏—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª –≤ –æ–¥–∏–Ω.
+ –í –ø–æ–ª—É—á–µ–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω–¥–µ–∫—Å —á–∏—Å–ª–∞ **`8`** */
{
    const evenNumbers: number[] = [2, 4, 6, 8, 10];
    const oddNumbers: number[] = [1, 3, 5, 7, 9];

    const numbers = [...evenNumbers, ...oddNumbers];
    console.log('Task 6: ', numbers.indexOf(8));
}




/*Task 7 üñ•
–î–∞–Ω –º–∞—Å—Å–∏–≤:
```javascript
    const binary = [0, 0, 0, 0]
```
+ –ù–∞—à –±–∏–Ω–∞—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ–ø–æ–ª–Ω—ã–π, –≤ –Ω–µ–º —è–≤–Ω–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –µ–¥–∏–Ω–∏—Ü.
+ –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤ —Å—Ç—Ä–æ–∫—É.
> [0, 0, 0, 0] -> '0101010' */
{
    const binary: number[] = [0, 0, 0, 0];
    console.log('Task 7: ', binary.join('1'));
}




//ADVANCED level
//–î–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª—ã **`for`** –∏–ª–∏ **`for of`**


/*Task 1 üë®‚Äçüè´
–†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º. */
{
    console.log('ADVANCED level Task 1: ');

    function check_palindrome(word: string): void {
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Å–ª–æ–≤–∞
    const array1: string[] = [...word];
    // –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤
    const array2 = array1.slice().reverse();
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
    let isPalindrome = true;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –º–∞—Å—Å–∏–≤—ã array1 –∏ array2 —Ä–∞–≤–Ω—ã–º–∏
    for (let i = 0; i < array1.length; i++) {
        if (array1[i] !== array2[i]) {
            isPalindrome = false;
            break;
        }
    }
    console.log(isPalindrome);
    console.log(array1);
    console.log(array2);
}
check_palindrome('—Ä–∞–¥–∞—Ä1');
}




/*Task 2 üë®‚Äçüè´
```javascript
    const matrix = [
        [12, 98, 78, 65, 23],
        [54, 76, 98, 43, 65],
        [13, 324, 65, 312],
        [9092, 22, 45, 90000],
    ]
```
> –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–µ–ª –≤ –º–Ω–æ–≥–æ–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ. */
{
    const matrix = [
        [12, 98, 78, 65, 23],
        [54, 76, 98, 43, 65],
        [13, 324, 65, 312],
        [9092, 22, 45, 90000],
    ];
    
    let sum = 0;
    let count = 0;
    
    for (const row of matrix) {
        for (const num of row) {
            sum += num;
            count++;
        }
    }
    let average = sum / count;
    
    console.log("Task 2: ", average);
}




/*Task 3 üë®‚Äçüè´
–î–∞–Ω –º–∞—Å—Å–∏–≤:
```javascript
   const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4]
```
–°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞, –≤ –æ–¥–∏–Ω –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤—Å–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –≤–∫–ª—é—á–∞—è 0, –≤ –¥—Ä—É–≥–æ–π –≤—Å–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ. 
–û–±–∞ –º–∞—Å—Å–∏–≤–∞ –∑–∞—Ç–µ–º –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å.  */
{
    console.log('Task 3: ');

    const mixedNumbers = [-14, 24, -89, 43, 0 , -1, 412, 4];
    //–∏–Ω–∏—Ü–∏–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–º
    const positiveNumbers: any[] = [];
    const negativeNumbers: any[] = [];

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ positiveNumbers, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ negativeNumbers
    for (let i = 0; i < mixedNumbers.length; i++) {
        if (mixedNumbers[i] >= 0) {
            positiveNumbers.push(mixedNumbers[i]);
        } else {
            negativeNumbers.push(mixedNumbers[i]);
        }
    }
    console.log(positiveNumbers);
    console.log(negativeNumbers);
}




/*Task 4 üë®‚Äçüè´
–°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω–Ω–æ–π –Ω–µ –º–µ–Ω–µ–µ 5, –∏–∑ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª. 
–î–∞–ª–µ–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç –≤—Å–µ —á–∏—Å–ª–∞ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –≤–æ–∑–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫—É–± –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤. 
–í –∫–æ–Ω—Ü–µ –≤—ã–≤–µ—Å—Ç–∏ –æ–±–∞ –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å. */
{
    console.log('Task 4: ');

    let array1: number[] = [];
    let array2: number[] = [];

    for (let i = 0; i < 5; i++) {
    let randomNumber: number = Math.floor(Math.random() * 10);
        array1.push(randomNumber);
    }
    console.log(array1);

    for (let i = 0; i < array1.length; i++) {
    let cubedNumber: number = array1[i] ** 3;
        array2.push(cubedNumber);
    }
    console.log(array2);
}